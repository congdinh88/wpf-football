// <auto-generated />
using System;
using ManageFootball.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManageFootball.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManageFootball.DataContext.Match", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId1")
                        .HasColumnType("int");

                    b.Property<int>("TeamId2")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.HasIndex("TeamId1");

                    b.HasIndex("TeamId2");

                    b.ToTable("Matches", (string)null);
                });

            modelBuilder.Entity("ManageFootball.DataContext.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("ManageFootball.DataContext.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Criteria2")
                        .HasColumnType("bit");

                    b.Property<bool?>("Criteria3")
                        .HasColumnType("bit");

                    b.Property<string>("MatchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Sco")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchCode");

                    b.HasIndex("TeamId");

                    b.ToTable("Scores", (string)null);
                });

            modelBuilder.Entity("ManageFootball.DataContext.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Goals")
                        .HasColumnType("bit");

                    b.Property<string>("MatchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<bool?>("RedCard")
                        .HasColumnType("bit");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("YellowCard")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MatchCode");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Stats", (string)null);
                });

            modelBuilder.Entity("ManageFootball.DataContext.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Teams")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams", (string)null);
                });

            modelBuilder.Entity("ManageFootball.DataContext.Match", b =>
                {
                    b.HasOne("ManageFootball.DataContext.Team", "Team1")
                        .WithMany("Matches1")
                        .HasForeignKey("TeamId1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManageFootball.DataContext.Team", "Team2")
                        .WithMany("Matches2")
                        .HasForeignKey("TeamId2")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team1");

                    b.Navigation("Team2");
                });

            modelBuilder.Entity("ManageFootball.DataContext.Player", b =>
                {
                    b.HasOne("ManageFootball.DataContext.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ManageFootball.DataContext.Score", b =>
                {
                    b.HasOne("ManageFootball.DataContext.Match", "Match")
                        .WithMany("Scores")
                        .HasForeignKey("MatchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManageFootball.DataContext.Team", "Team")
                        .WithMany("Scores")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ManageFootball.DataContext.Stats", b =>
                {
                    b.HasOne("ManageFootball.DataContext.Match", "Match")
                        .WithMany("Stats")
                        .HasForeignKey("MatchCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManageFootball.DataContext.Player", "Player")
                        .WithMany("Stats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManageFootball.DataContext.Team", "Team")
                        .WithMany("Stats")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ManageFootball.DataContext.Match", b =>
                {
                    b.Navigation("Scores");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("ManageFootball.DataContext.Player", b =>
                {
                    b.Navigation("Stats");
                });

            modelBuilder.Entity("ManageFootball.DataContext.Team", b =>
                {
                    b.Navigation("Matches1");

                    b.Navigation("Matches2");

                    b.Navigation("Players");

                    b.Navigation("Scores");

                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
